




import java.awt.Font;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

public class GraphicInterface extends javax.swing.JFrame implements Runnable{

    /**
     * Creates new form GraphicInterface
     */
    public GraphicInterface() {
//        UIManager.setLookAndFeel("com.formdev.flatlaf.FlatLightLaf");
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        anchor = new javax.swing.JPanel();
        chatPanel = new javax.swing.JPanel();
        chat = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtHistoricoChat = new javax.swing.JTextArea();
        txtChatInput = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        gamePanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtHistorico = new javax.swing.JTextArea();
        btnPedra = new javax.swing.JToggleButton();
        btnPapel = new javax.swing.JToggleButton();
        btnTesoura = new javax.swing.JToggleButton();
        lblOponetne = new javax.swing.JLabel();
        lblDerrotas = new javax.swing.JLabel();
        lblVitorias = new javax.swing.JLabel();
        lblEmpates = new javax.swing.JLabel();
        playersPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listPlayers = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Jokenpô");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        txtHistoricoChat.setEditable(false);
        txtHistoricoChat.setColumns(20);
        txtHistoricoChat.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtHistoricoChat.setRows(5);
        txtHistoricoChat.setFocusable(false);
        jScrollPane1.setViewportView(txtHistoricoChat);

        txtChatInput.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtChatInput.setToolTipText("");
        txtChatInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtChatInputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtChatInputFocusLost(evt);
            }
        });
        txtChatInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChatInputActionPerformed(evt);
            }
        });
        txtChatInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtChatInputKeyPressed(evt);
            }
        });

        jButton1.setText(">");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout chatLayout = new javax.swing.GroupLayout(chat);
        chat.setLayout(chatLayout);
        chatLayout.setHorizontalGroup(
            chatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(chatLayout.createSequentialGroup()
                .addComponent(txtChatInput, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                .addContainerGap())
        );
        chatLayout.setVerticalGroup(
            chatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chatLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(chatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtChatInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout chatPanelLayout = new javax.swing.GroupLayout(chatPanel);
        chatPanel.setLayout(chatPanelLayout);
        chatPanelLayout.setHorizontalGroup(
            chatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        chatPanelLayout.setVerticalGroup(
            chatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        txtHistorico.setEditable(false);
        txtHistorico.setColumns(20);
        txtHistorico.setRows(5);
        txtHistorico.setFocusable(false);
        jScrollPane2.setViewportView(txtHistorico);

        btnPedra.setIcon(new javax.swing.ImageIcon(getClass().getResource("pedra.png"))); // NOI18N
        btnPedra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPedraActionPerformed(evt);
            }
        });

        btnPapel.setIcon(new javax.swing.ImageIcon(getClass().getResource("papel.png"))); // NOI18N
        btnPapel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPapelActionPerformed(evt);
            }
        });

        btnTesoura.setIcon(new javax.swing.ImageIcon(getClass().getResource("tesoura.png"))); // NOI18N
        btnTesoura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTesouraActionPerformed(evt);
            }
        });

        lblOponetne.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblOponetne.setText("Oponente: ");

        lblDerrotas.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblDerrotas.setForeground(new java.awt.Color(255, 0, 0));
        lblDerrotas.setText("Derrotas: ");

        lblVitorias.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblVitorias.setForeground(new java.awt.Color(51, 255, 0));
        lblVitorias.setText("Vitórias: ");

        lblEmpates.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblEmpates.setForeground(new java.awt.Color(255, 204, 51));
        lblEmpates.setText("Empates: ");

        javax.swing.GroupLayout gamePanelLayout = new javax.swing.GroupLayout(gamePanel);
        gamePanel.setLayout(gamePanelLayout);
        gamePanelLayout.setHorizontalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gamePanelLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gamePanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblOponetne)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gamePanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                        .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnPedra)
                            .addComponent(lblVitorias, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnPapel)
                            .addGroup(gamePanelLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(lblEmpates, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnTesoura)
                            .addComponent(lblDerrotas, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17))))
        );
        gamePanelLayout.setVerticalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gamePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gamePanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(gamePanelLayout.createSequentialGroup()
                        .addComponent(lblOponetne)
                        .addGap(51, 51, 51)
                        .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnTesoura)
                            .addComponent(btnPedra)
                            .addComponent(btnPapel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblVitorias)
                            .addComponent(lblEmpates)
                            .addComponent(lblDerrotas))
                        .addGap(28, 28, 28))))
        );

        listPlayers.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        listPlayers.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listPlayersValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(listPlayers);

        javax.swing.GroupLayout playersPanelLayout = new javax.swing.GroupLayout(playersPanel);
        playersPanel.setLayout(playersPanelLayout);
        playersPanelLayout.setHorizontalGroup(
            playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playersPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        playersPanelLayout.setVerticalGroup(
            playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playersPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );

        javax.swing.GroupLayout anchorLayout = new javax.swing.GroupLayout(anchor);
        anchor.setLayout(anchorLayout);
        anchorLayout.setHorizontalGroup(
            anchorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, anchorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(playersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chatPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(gamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        anchorLayout.setVerticalGroup(
            anchorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, anchorLayout.createSequentialGroup()
                .addComponent(gamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(anchorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(chatPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(anchorLayout.createSequentialGroup()
                        .addComponent(playersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(anchor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(anchor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtChatInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChatInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChatInputActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String msg = txtChatInput.getText();
        if (!msg.isBlank()){
            out.println("/msg " + msg);
        }
        txtChatInput.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnPedraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPedraActionPerformed
        btnPedra.setSelected(true);
        btnTesoura.setSelected(false);
        btnPapel.setSelected(false);
        jogada(this.PEDRA);
        out.println("/jogada " + escolha + " " + oponente);
        btnPedra.setSelected(false);
    }//GEN-LAST:event_btnPedraActionPerformed

    private void btnPapelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPapelActionPerformed
       btnPapel.setSelected(true);
       btnPedra.setSelected(false);
       btnTesoura.setSelected(false);
       jogada(this.PAPEL);
       out.println("/jogada " + escolha + " " + oponente);
       btnPapel.setSelected(false);
    }//GEN-LAST:event_btnPapelActionPerformed

    private void btnTesouraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTesouraActionPerformed
       btnTesoura.setSelected(true);
       btnPedra.setSelected(false);
       btnPapel.setSelected(false);
       jogada(this.TESOURA);
       out.println("/jogada " + escolha + " " + oponente);
       btnTesoura.setSelected(false);
    }//GEN-LAST:event_btnTesouraActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            this.out.println("/quit");
            this.client.shutdown();
            this.in.close();
            this.out.close();
       } catch (IOException ex) {
            Logger.getLogger(GraphicInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    private void listPlayersValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listPlayersValueChanged
       if (!evt.getValueIsAdjusting()) {
        String op = (String)this.model.getElementAt(this.listPlayers.getSelectedIndex());
       setOponente(op);
       System.out.println(op + " quantidade de elementos: " + this.model.size()); 
       }
    }//GEN-LAST:event_listPlayersValueChanged

    private void txtChatInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtChatInputFocusGained
        txtChatInput.setText("");
    }//GEN-LAST:event_txtChatInputFocusGained

    private void txtChatInputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtChatInputFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChatInputFocusLost

    private void txtChatInputKeyPressed(KeyEvent evt) {//GEN-FIRST:event_txtChatInputKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
           String msg = txtChatInput.getText();
            if (!msg.isBlank()){
            out.println("/msg " + msg);
            }
            txtChatInput.setText("");
        }
    }//GEN-LAST:event_txtChatInputKeyPressed

    /**
     * @param args the command line arguments
     */
    public void main(String[] args) {
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (InstantiationException ex) {
            Logger.getLogger(GraphicInterface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(GraphicInterface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(GraphicInterface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GraphicInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        setVisible(true);
    }

    private void init() {
        this.escolha = "";
        this.txtChatInput.setText(hintChat);
        Font fonte = new Font("Segoe UI Emoji", Font.PLAIN, 14);
        this.txtChatInput.setFont(fonte);
        this.txtHistorico.setFont(fonte);
        this.historicoPartidas = "-------- Histórico de Partidas --------" + "\n";
        this.historicoChat = "----------------- Chat -----------------" + "\n";
        this.txtHistoricoChat.setText(historicoChat);
        this.txtHistorico.setText(historicoPartidas);
        this.model = new DefaultListModel();
        this.listPlayers.setModel(model);
        this.listaJogadores = new ArrayList<>();
        this.oponente = "SERVIDOR";
        setOponente(oponente);
        novoJogador(oponente);
    }
    
    private void jogada(String escolha){
        this.escolha = escolha;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel anchor;
    private javax.swing.JToggleButton btnPapel;
    private javax.swing.JToggleButton btnPedra;
    private javax.swing.JToggleButton btnTesoura;
    private javax.swing.JPanel chat;
    private javax.swing.JPanel chatPanel;
    private javax.swing.JPanel gamePanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblDerrotas;
    private javax.swing.JLabel lblEmpates;
    private javax.swing.JLabel lblOponetne;
    private javax.swing.JLabel lblVitorias;
    private javax.swing.JList<String> listPlayers;
    private javax.swing.JPanel playersPanel;
    private javax.swing.JTextField txtChatInput;
    private javax.swing.JTextArea txtHistorico;
    private javax.swing.JTextArea txtHistoricoChat;
    // End of variables declaration//GEN-END:variables
    
    
    // Minhas vars
    private final String hintChat = "Digite uma mensagem...";
    private final String TESOURA = "Tesoura";
    private final String PEDRA = "PEDRA";
    private final String PAPEL = "PAPEL";
    private String escolha;
    private String historicoPartidas;
    private String historicoChat;
    private DefaultListModel model;
    private BufferedReader in;
    private PrintWriter out;
    private List<String>listaJogadores;
    private Client client;
    private String oponente;
    private String me;
    private int vitorias, empates, derrotas;
       
    public void build(Client client, PrintWriter out, BufferedReader in) throws IOException {
    this.out = out;
    this.in = in;
    this.client = client;
    }
    
    public void setMe(String nick){
        this.me = nick;
    }
    
    public void mensagemRecebida(String mensagem){
        this.historicoChat += mensagem + "\n";
        this.txtHistoricoChat.setText(this.historicoChat);
    }
    
    public void novoJogador(String nomeJogador){
        if (!model.contains(nomeJogador) && !nomeJogador.equalsIgnoreCase(me)){
            model.addElement(nomeJogador);
        }
    }
    
    public void removerJogador(String jogadorRemovido){
        if (this.listPlayers.getSelectedValue().equals(jogadorRemovido)) {
            this.listPlayers.setSelectedIndex(0);
        }
        if (jogadorRemovido.equals(me)){
        return;
        }
        if (model.contains(jogadorRemovido)) {
            model.removeElement(jogadorRemovido);
        }
    }
    
    public void setOponente(String oponente){
        this.oponente = oponente;
        this.lblOponetne.setText("Oponente: " + oponente);
        
        for (int i = 0; i < this.model.getSize(); i++) {
            if (model.elementAt(i).equals(oponente)) {
                this.listPlayers.setSelectedIndex(i);
            }
        }
    }
    
    public void addResultado(String resultado) {
        this.historicoPartidas += resultado + "\n";
        this.txtHistorico.setText(this.historicoPartidas);
    }
    
    public void addMensagem(String msg){
        this.historicoChat += msg + " \n";
        this.txtHistoricoChat.setText(this.historicoChat);
    }

    public void setVitorias(int v) {
        this.vitorias = v;
        this.lblVitorias.setText("Vitórias: " + this.vitorias);
    }

    public void setEmpates(int e) {
        this.empates = e;
        this.lblEmpates.setText("Empates: " + this.empates);
    }

    public void setDerrotas(int d) {
        this.derrotas = d;
        this.lblDerrotas.setText("Derrotas : " + this.derrotas);
    }
    
    
    
    
    public String getNick(){
        return this.me;
    }
    
    @Override
    public void run() {
        main(new String[]{});
    }
    
}
