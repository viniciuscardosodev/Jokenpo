
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author user
 */
public class DialogConnect extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form DialogConnect
     */
    public DialogConnect() {
//        UIManager.setLookAndFeel("com.formdev.flatlaf.FlatLightLaf");
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnConectar = new javax.swing.JButton();
        lblErro = new javax.swing.JLabel();
        txtIP = new javax.swing.JFormattedTextField();
        txtNick = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Conectar");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Digite aqui o IP do servidor:");

        btnConectar.setText("Conectar");
        btnConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConectarActionPerformed(evt);
            }
        });

        lblErro.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        try {
            txtIP.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###.###:####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtIP.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtNick.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNick.setText("Digite um nickname");
        txtNick.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNickFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNickFocusLost(evt);
            }
        });
        txtNick.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNickKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(btnConectar))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabel1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtNick, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                        .addComponent(txtIP, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblErro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblErro, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtNick, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnConectar)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConectarActionPerformed
        cliente = null;
        String[] splited = txtIP.getText().split(":");
        String ip = splited[0];
        String port = splited[1];

        try {
            String nick = txtNick.getText();
            if (nick.isBlank()) {
                this.lblErro.setText("Digite um nick!");
                return;
            }
            cliente = new Socket(ip, Integer.parseInt(port));
            PrintWriter out = new PrintWriter(cliente.getOutputStream(),true);
            BufferedReader reader = new BufferedReader(new InputStreamReader(cliente.getInputStream()));
            out.println("/nick " + this.nick);
            String resposta = reader.readLine();
            
            if (resposta.equals("OK")){
                Client c = new Client(cliente, nick);
                Thread t = new Thread(c);
                t.start();
                dispose();
            } else {
                this.lblErro.setText("Nick em uso! Escolha outro nickname.");
                return;
            }
            
            
        } catch (IOException | NumberFormatException ex) {
           this.lblErro.setText("Verifique o endere√ßo digitado e tente novamente.");
        }
    }//GEN-LAST:event_btnConectarActionPerformed

    private void txtNickFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNickFocusGained
       txtNick.setText("");
    }//GEN-LAST:event_txtNickFocusGained

    private void txtNickFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNickFocusLost
        this.nick = txtNick.getText();
    }//GEN-LAST:event_txtNickFocusLost

    private void txtNickKeyPressed(KeyEvent evt) {//GEN-FIRST:event_txtNickKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.nick = txtNick.getText();
            btnConectarActionPerformed(null);
        }
    }//GEN-LAST:event_txtNickKeyPressed

    @Override
    public void run() {
        main(new String[]{});
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel"); // 
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DialogConnect.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(DialogConnect.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(DialogConnect.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(DialogConnect.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                    new DialogConnect().setVisible(true);
            }
        });
    }
    
    private void init(){
        lblErro.setForeground(Color.red);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConectar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblErro;
    private javax.swing.JFormattedTextField txtIP;
    private javax.swing.JTextField txtNick;
    // End of variables declaration//GEN-END:variables

    // Minhas vars
    private String nick;
    public static Socket cliente;
}
